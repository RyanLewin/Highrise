using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class StartScene : MonoBehaviour {

    public Building building;
    public bool startscene;
    ResourceManager resources;

    public BuildingTypes house;
    public BuildingTypes[] commercial;
    public BuildingTypes road;
    public BuildingTypes townHall;
    public BuildingTypes hospital;
    public BuildingTypes police;
    public BuildingTypes fireStation;
    


    void Start ()
    {
        resources = transform.GetComponent<ResourceManager>();
        //0 = nothing
        //1 = road
        //2 = house
        //3 = store
        //4 = town hall
        //5 = office
        //6 = hospital
        //7 = police station
        //8 = fire station

        if (startscene)
        {
            resources.creative = true;
            TextFileTest();   //UNCOMMENT THIS FOR START SCENE

            building.obj = 0;
            building.ResetObjectToBuild(null);

            resources.creative = false;
        }
    }

    void TextFileTest ()
    {
        building.ResetObjectToBuild(townHall);
        StartCoroutine(building.PlaceBuilding(new Cells(47, 50), Direction.North));
        building.ResetObjectToBuild(hospital);
        StartCoroutine(building.PlaceBuilding(new Cells(62, 40), Direction.East));
        building.ResetObjectToBuild(house);
        StartCoroutine(building.PlaceBuilding(new Cells(45, 50), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(43, 50), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(41, 50), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(39, 50), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(37, 50), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(42, 47), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(40, 47), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(38, 47), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(52, 45), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(50, 45), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(48, 45), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(46, 45), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(44, 45), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(42, 45), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(40, 45), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(38, 45), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(52, 42), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(50, 42), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(48, 42), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(46, 42), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(44, 42), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(42, 42), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(40, 42), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(38, 42), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(35, 48), Direction.West));
        StartCoroutine(building.PlaceBuilding(new Cells(35, 46), Direction.West));
        StartCoroutine(building.PlaceBuilding(new Cells(35, 44), Direction.West));
        StartCoroutine(building.PlaceBuilding(new Cells(35, 42), Direction.West));
        StartCoroutine(building.PlaceBuilding(new Cells(35, 40), Direction.West));
        building.ResetObjectToBuild(commercial[0]);
        StartCoroutine(building.PlaceBuilding(new Cells(44, 47), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(47, 47), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(50, 47), Direction.South));
        building.ResetObjectToBuild(commercial[1]);
        StartCoroutine(building.PlaceBuilding(new Cells(53, 47), Direction.South));
        building.ResetObjectToBuild(house);
        StartCoroutine(building.PlaceBuilding(new Cells(54, 42), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(56, 42), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(58, 42), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(58, 40), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(56, 40), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(54, 40), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(52, 40), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(50, 40), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(48, 40), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(46, 40), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(44, 40), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(42, 40), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(40, 40), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(38, 40), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(35, 38), Direction.West));
        StartCoroutine(building.PlaceBuilding(new Cells(37, 37), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(39, 37), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(42, 37), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(44, 37), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(46, 37), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(48, 37), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(50, 37), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(52, 37), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(54, 37), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(56, 37), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(58, 37), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(60, 37), Direction.South));
        StartCoroutine(building.PlaceBuilding(new Cells(62, 38), Direction.East));
        StartCoroutine(building.PlaceBuilding(new Cells(54, 45), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(56, 45), Direction.North));
        StartCoroutine(building.PlaceBuilding(new Cells(58, 45), Direction.North));
        building.ResetObjectToBuild(commercial[0]);
        StartCoroutine(building.PlaceBuilding(new Cells(39, 33), Direction.West));
        StartCoroutine(building.PlaceBuilding(new Cells(39, 30), Direction.West));
        StartCoroutine(building.PlaceBuilding(new Cells(42, 33), Direction.East));
        StartCoroutine(building.PlaceBuilding(new Cells(42, 30), Direction.East));
        StartCoroutine(building.PlaceBuilding(new Cells(42, 27), Direction.East));
        StartCoroutine(building.PlaceBuilding(new Cells(39, 27), Direction.West));
        StartCoroutine(building.PlaceBuilding(new Cells(45, 33), Direction.East));
        StartCoroutine(building.PlaceBuilding(new Cells(45, 30), Direction.East));
        StartCoroutine(building.PlaceBuilding(new Cells(45, 27), Direction.East));
        StartCoroutine(building.PlaceBuilding(new Cells(47, 27), Direction.West));
        StartCoroutine(building.PlaceBuilding(new Cells(47, 30), Direction.West));
        StartCoroutine(building.PlaceBuilding(new Cells(47, 33), Direction.West));
        building.ResetObjectToBuild(fireStation);
        StartCoroutine(building.PlaceBuilding(new Cells(46, 22), Direction.South));
        building.ResetObjectToBuild(house);
        StartCoroutine(building.PlaceBuilding(new Cells(50, 34), Direction.East));
        StartCoroutine(building.PlaceBuilding(new Cells(50, 32), Direction.East));
        StartCoroutine(building.PlaceBuilding(new Cells(50, 30), Direction.East));
        StartCoroutine(building.PlaceBuilding(new Cells(50, 28), Direction.East));
        StartCoroutine(building.PlaceBuilding(new Cells(52, 28), Direction.West));
        StartCoroutine(building.PlaceBuilding(new Cells(52, 30), Direction.West));
        StartCoroutine(building.PlaceBuilding(new Cells(52, 32), Direction.West));
        StartCoroutine(building.PlaceBuilding(new Cells(52, 34), Direction.West));
        StartCoroutine(building.PlaceBuilding(new Cells(55, 34), Direction.East));
        StartCoroutine(building.PlaceBuilding(new Cells(55, 32), Direction.East));
        StartCoroutine(building.PlaceBuilding(new Cells(55, 30), Direction.East));
        StartCoroutine(building.PlaceBuilding(new Cells(55, 28), Direction.East));
        StartCoroutine(building.PlaceBuilding(new Cells(55, 26), Direction.East));
        StartCoroutine(building.PlaceBuilding(new Cells(53, 24), Direction.South));
        building.ResetObjectToBuild(police);
        StartCoroutine(building.PlaceBuilding(new Cells(42, 23), Direction.South));
        building.ResetObjectToBuild(commercial[1]);
        StartCoroutine(building.PlaceBuilding(new Cells(39, 21), Direction.West));
        building.ResetObjectToBuild(road);
        building.PlaceRoad(false, new Cells(41, 39), Direction.North);
        building.PlaceRoad(true, new Cells(41, 39), Direction.North);
        building.PlaceRoad(true, new Cells(41, 39), Direction.South);
        building.PlaceRoad(false, new Cells(41, 38), Direction.North);
        building.PlaceRoad(true, new Cells(41, 38), Direction.North);
        building.PlaceRoad(true, new Cells(41, 38), Direction.South);
        building.PlaceRoad(false, new Cells(41, 37), Direction.North);
        building.PlaceRoad(true, new Cells(41, 37), Direction.North);
        building.PlaceRoad(true, new Cells(41, 37), Direction.South);
        building.PlaceRoad(false, new Cells(41, 36), Direction.North);
        building.PlaceRoad(true, new Cells(41, 36), Direction.North);
        building.PlaceRoad(true, new Cells(41, 36), Direction.South);
        building.PlaceRoad(false, new Cells(41, 35), Direction.North);
        building.PlaceRoad(true, new Cells(41, 35), Direction.North);
        building.PlaceRoad(true, new Cells(41, 35), Direction.South);
        building.PlaceRoad(false, new Cells(41, 34), Direction.North);
        building.PlaceRoad(true, new Cells(41, 34), Direction.North);
        building.PlaceRoad(true, new Cells(41, 34), Direction.South);
        building.PlaceRoad(false, new Cells(41, 33), Direction.North);
        building.PlaceRoad(true, new Cells(41, 33), Direction.North);
        building.PlaceRoad(true, new Cells(41, 33), Direction.South);
        building.PlaceRoad(false, new Cells(41, 32), Direction.North);
        building.PlaceRoad(true, new Cells(41, 32), Direction.North);
        building.PlaceRoad(true, new Cells(41, 32), Direction.South);
        building.PlaceRoad(false, new Cells(41, 31), Direction.North);
        building.PlaceRoad(true, new Cells(41, 31), Direction.North);
        building.PlaceRoad(true, new Cells(41, 31), Direction.South);
        building.PlaceRoad(false, new Cells(41, 30), Direction.North);
        building.PlaceRoad(true, new Cells(41, 30), Direction.North);
        building.PlaceRoad(true, new Cells(41, 30), Direction.South);
        building.PlaceRoad(false, new Cells(41, 29), Direction.North);
        building.PlaceRoad(true, new Cells(41, 29), Direction.North);
        building.PlaceRoad(true, new Cells(41, 29), Direction.South);
        building.PlaceRoad(false, new Cells(41, 28), Direction.North);
        building.PlaceRoad(true, new Cells(41, 28), Direction.North);
        building.PlaceRoad(true, new Cells(41, 28), Direction.South);
        building.PlaceRoad(false, new Cells(41, 27), Direction.North);
        building.PlaceRoad(true, new Cells(41, 27), Direction.North);
        building.PlaceRoad(true, new Cells(41, 27), Direction.South);
        building.PlaceRoad(false, new Cells(41, 26), Direction.North);
        building.PlaceRoad(true, new Cells(41, 26), Direction.North);
        building.PlaceRoad(true, new Cells(41, 26), Direction.South);
        building.PlaceRoad(false, new Cells(41, 25), Direction.North);
        building.PlaceRoad(true, new Cells(41, 25), Direction.North);
        building.PlaceRoad(true, new Cells(41, 25), Direction.South);
        building.PlaceRoad(false, new Cells(41, 24), Direction.North);
        building.PlaceRoad(true, new Cells(41, 24), Direction.North);
        building.PlaceRoad(true, new Cells(41, 24), Direction.South);
        building.PlaceRoad(false, new Cells(41, 23), Direction.North);
        building.PlaceRoad(true, new Cells(41, 23), Direction.North);
        building.PlaceRoad(true, new Cells(41, 23), Direction.South);
        building.PlaceRoad(false, new Cells(41, 22), Direction.North);
        building.PlaceRoad(true, new Cells(41, 22), Direction.North);
        building.PlaceRoad(true, new Cells(41, 22), Direction.South);
        building.PlaceRoad(false, new Cells(41, 21), Direction.North);
        building.PlaceRoad(true, new Cells(41, 26), Direction.East);
        building.PlaceRoad(true, new Cells(41, 26), Direction.West);
        building.PlaceRoad(false, new Cells(42, 26), Direction.East);
        building.PlaceRoad(true, new Cells(42, 26), Direction.East);
        building.PlaceRoad(true, new Cells(42, 26), Direction.West);
        building.PlaceRoad(false, new Cells(43, 26), Direction.East);
        building.PlaceRoad(true, new Cells(43, 26), Direction.East);
        building.PlaceRoad(true, new Cells(43, 26), Direction.West);
        building.PlaceRoad(false, new Cells(44, 26), Direction.East);
        building.PlaceRoad(true, new Cells(44, 26), Direction.East);
        building.PlaceRoad(true, new Cells(44, 26), Direction.West);
        building.PlaceRoad(false, new Cells(45, 26), Direction.East);
        building.PlaceRoad(true, new Cells(45, 26), Direction.East);
        building.PlaceRoad(true, new Cells(45, 26), Direction.West);
        building.PlaceRoad(false, new Cells(46, 26), Direction.East);
        building.PlaceRoad(true, new Cells(46, 26), Direction.East);
        building.PlaceRoad(true, new Cells(46, 26), Direction.West);
        building.PlaceRoad(false, new Cells(47, 26), Direction.East);
        building.PlaceRoad(true, new Cells(47, 26), Direction.East);
        building.PlaceRoad(true, new Cells(47, 26), Direction.West);
        building.PlaceRoad(false, new Cells(48, 26), Direction.East);
        building.PlaceRoad(true, new Cells(48, 26), Direction.East);
        building.PlaceRoad(true, new Cells(48, 26), Direction.West);
        building.PlaceRoad(false, new Cells(49, 26), Direction.East);
        building.PlaceRoad(true, new Cells(49, 26), Direction.East);
        building.PlaceRoad(true, new Cells(49, 26), Direction.West);
        building.PlaceRoad(false, new Cells(50, 26), Direction.East);
        building.PlaceRoad(true, new Cells(50, 26), Direction.East);
        building.PlaceRoad(true, new Cells(50, 26), Direction.West);
        building.PlaceRoad(false, new Cells(51, 26), Direction.East);
        building.PlaceRoad(true, new Cells(51, 26), Direction.East);
        building.PlaceRoad(true, new Cells(51, 26), Direction.West);
        building.PlaceRoad(false, new Cells(52, 26), Direction.East);
        building.PlaceRoad(true, new Cells(52, 26), Direction.East);
        building.PlaceRoad(true, new Cells(52, 26), Direction.West);
        building.PlaceRoad(false, new Cells(53, 26), Direction.East);
        building.PlaceRoad(true, new Cells(53, 26), Direction.East);
        building.PlaceRoad(true, new Cells(53, 26), Direction.West);
        building.PlaceRoad(false, new Cells(54, 26), Direction.East);
        building.PlaceRoad(true, new Cells(54, 26), Direction.South);
        building.PlaceRoad(true, new Cells(54, 26), Direction.South);
        building.PlaceRoad(false, new Cells(54, 27), Direction.South);
        building.PlaceRoad(true, new Cells(54, 27), Direction.South);
        building.PlaceRoad(true, new Cells(54, 27), Direction.South);
        building.PlaceRoad(false, new Cells(54, 28), Direction.South);
        building.PlaceRoad(true, new Cells(54, 28), Direction.South);
        building.PlaceRoad(true, new Cells(54, 28), Direction.South);
        building.PlaceRoad(false, new Cells(54, 29), Direction.South);
        building.PlaceRoad(true, new Cells(54, 29), Direction.South);
        building.PlaceRoad(true, new Cells(54, 29), Direction.South);
        building.PlaceRoad(false, new Cells(54, 30), Direction.South);
        building.PlaceRoad(true, new Cells(54, 30), Direction.South);
        building.PlaceRoad(true, new Cells(54, 30), Direction.South);
        building.PlaceRoad(false, new Cells(54, 31), Direction.South);
        building.PlaceRoad(true, new Cells(54, 31), Direction.South);
        building.PlaceRoad(true, new Cells(54, 31), Direction.South);
        building.PlaceRoad(false, new Cells(54, 32), Direction.South);
        building.PlaceRoad(true, new Cells(54, 32), Direction.South);
        building.PlaceRoad(true, new Cells(54, 32), Direction.South);
        building.PlaceRoad(false, new Cells(54, 33), Direction.South);
        building.PlaceRoad(true, new Cells(54, 33), Direction.South);
        building.PlaceRoad(true, new Cells(54, 33), Direction.South);
        building.PlaceRoad(false, new Cells(54, 34), Direction.South);
        building.PlaceRoad(false, new Cells(54, 35), Direction.South);
        building.PlaceRoad(true, new Cells(49, 26), Direction.South);
        building.PlaceRoad(true, new Cells(49, 26), Direction.South);
        building.PlaceRoad(false, new Cells(49, 27), Direction.South);
        building.PlaceRoad(true, new Cells(49, 27), Direction.South);
        building.PlaceRoad(true, new Cells(49, 27), Direction.South);
        building.PlaceRoad(false, new Cells(49, 28), Direction.South);
        building.PlaceRoad(true, new Cells(49, 28), Direction.South);
        building.PlaceRoad(true, new Cells(49, 28), Direction.South);
        building.PlaceRoad(false, new Cells(49, 29), Direction.South);
        building.PlaceRoad(true, new Cells(49, 29), Direction.South);
        building.PlaceRoad(true, new Cells(49, 29), Direction.South);
        building.PlaceRoad(false, new Cells(49, 30), Direction.South);
        building.PlaceRoad(true, new Cells(49, 30), Direction.South);
        building.PlaceRoad(true, new Cells(49, 30), Direction.South);
        building.PlaceRoad(false, new Cells(49, 31), Direction.South);
        building.PlaceRoad(true, new Cells(49, 31), Direction.South);
        building.PlaceRoad(true, new Cells(49, 31), Direction.South);
        building.PlaceRoad(false, new Cells(49, 32), Direction.South);
        building.PlaceRoad(true, new Cells(49, 32), Direction.South);
        building.PlaceRoad(true, new Cells(49, 32), Direction.South);
        building.PlaceRoad(false, new Cells(49, 33), Direction.South);
        building.PlaceRoad(true, new Cells(49, 33), Direction.South);
        building.PlaceRoad(true, new Cells(49, 33), Direction.South);
        building.PlaceRoad(false, new Cells(49, 34), Direction.South);
        building.PlaceRoad(false, new Cells(49, 35), Direction.South);
        building.PlaceRoad(true, new Cells(44, 26), Direction.South);
        building.PlaceRoad(true, new Cells(44, 26), Direction.South);
        building.PlaceRoad(false, new Cells(44, 27), Direction.South);
        building.PlaceRoad(true, new Cells(44, 27), Direction.South);
        building.PlaceRoad(true, new Cells(44, 27), Direction.South);
        building.PlaceRoad(false, new Cells(44, 28), Direction.South);
        building.PlaceRoad(true, new Cells(44, 28), Direction.South);
        building.PlaceRoad(true, new Cells(44, 28), Direction.South);
        building.PlaceRoad(false, new Cells(44, 29), Direction.South);
        building.PlaceRoad(true, new Cells(44, 29), Direction.South);
        building.PlaceRoad(true, new Cells(44, 29), Direction.South);
        building.PlaceRoad(false, new Cells(44, 30), Direction.South);
        building.PlaceRoad(true, new Cells(44, 30), Direction.South);
        building.PlaceRoad(true, new Cells(44, 30), Direction.South);
        building.PlaceRoad(false, new Cells(44, 31), Direction.South);
        building.PlaceRoad(true, new Cells(44, 31), Direction.South);
        building.PlaceRoad(true, new Cells(44, 31), Direction.South);
        building.PlaceRoad(false, new Cells(44, 32), Direction.South);
        building.PlaceRoad(true, new Cells(44, 32), Direction.South);
        building.PlaceRoad(true, new Cells(44, 32), Direction.South);
        building.PlaceRoad(false, new Cells(44, 33), Direction.South);
        building.PlaceRoad(true, new Cells(44, 33), Direction.South);
        building.PlaceRoad(true, new Cells(44, 33), Direction.South);
        building.PlaceRoad(false, new Cells(44, 34), Direction.South);
        building.PlaceRoad(false, new Cells(44, 35), Direction.South);
        building.PlaceRoad(false, new Cells(56, 36), Direction.North);
        building.PlaceRoad(true, new Cells(56, 36), Direction.West);
        building.PlaceRoad(true, new Cells(56, 36), Direction.East);
        building.PlaceRoad(false, new Cells(55, 36), Direction.West);
        building.PlaceRoad(true, new Cells(55, 36), Direction.West);
        building.PlaceRoad(true, new Cells(55, 36), Direction.West);
        building.PlaceRoad(false, new Cells(54, 36), Direction.West);
        building.PlaceRoad(true, new Cells(54, 36), Direction.West);
        building.PlaceRoad(true, new Cells(54, 36), Direction.West);
        building.PlaceRoad(false, new Cells(53, 36), Direction.West);
        building.PlaceRoad(true, new Cells(53, 36), Direction.West);
        building.PlaceRoad(true, new Cells(53, 36), Direction.West);
        building.PlaceRoad(false, new Cells(52, 36), Direction.West);
        building.PlaceRoad(true, new Cells(52, 36), Direction.West);
        building.PlaceRoad(true, new Cells(52, 36), Direction.West);
        building.PlaceRoad(false, new Cells(51, 36), Direction.West);
        building.PlaceRoad(true, new Cells(51, 36), Direction.West);
        building.PlaceRoad(true, new Cells(51, 36), Direction.West);
        building.PlaceRoad(false, new Cells(50, 36), Direction.West);
        building.PlaceRoad(true, new Cells(50, 36), Direction.West);
        building.PlaceRoad(true, new Cells(50, 36), Direction.West);
        building.PlaceRoad(false, new Cells(49, 36), Direction.West);
        building.PlaceRoad(true, new Cells(49, 36), Direction.West);
        building.PlaceRoad(true, new Cells(49, 36), Direction.West);
        building.PlaceRoad(false, new Cells(48, 36), Direction.West);
        building.PlaceRoad(true, new Cells(48, 36), Direction.West);
        building.PlaceRoad(true, new Cells(48, 36), Direction.West);
        building.PlaceRoad(false, new Cells(47, 36), Direction.West);
        building.PlaceRoad(true, new Cells(47, 36), Direction.West);
        building.PlaceRoad(true, new Cells(47, 36), Direction.West);
        building.PlaceRoad(false, new Cells(46, 36), Direction.West);
        building.PlaceRoad(true, new Cells(46, 36), Direction.West);
        building.PlaceRoad(true, new Cells(46, 36), Direction.West);
        building.PlaceRoad(false, new Cells(45, 36), Direction.West);
        building.PlaceRoad(true, new Cells(45, 36), Direction.West);
        building.PlaceRoad(true, new Cells(45, 36), Direction.West);
        building.PlaceRoad(false, new Cells(44, 36), Direction.West);
        building.PlaceRoad(true, new Cells(44, 36), Direction.West);
        building.PlaceRoad(true, new Cells(44, 36), Direction.West);
        building.PlaceRoad(false, new Cells(43, 36), Direction.West);
        building.PlaceRoad(true, new Cells(41, 36), Direction.East);
        building.PlaceRoad(true, new Cells(43, 36), Direction.West);
        building.PlaceRoad(true, new Cells(41, 36), Direction.West);
        building.PlaceRoad(true, new Cells(43, 36), Direction.West);
        building.PlaceRoad(false, new Cells(42, 36), Direction.West);
        building.PlaceRoad(true, new Cells(41, 36), Direction.North);
        building.PlaceRoad(true, new Cells(41, 36), Direction.North);
        building.PlaceRoad(false, new Cells(40, 36), Direction.West);
        building.PlaceRoad(true, new Cells(40, 36), Direction.West);
        building.PlaceRoad(true, new Cells(40, 36), Direction.West);
        building.PlaceRoad(false, new Cells(39, 36), Direction.West);
        building.PlaceRoad(true, new Cells(39, 36), Direction.West);
        building.PlaceRoad(true, new Cells(39, 36), Direction.West);
        building.PlaceRoad(false, new Cells(38, 36), Direction.West);
        building.PlaceRoad(false, new Cells(61, 39), Direction.North);
        building.PlaceRoad(true, new Cells(61, 39), Direction.West);
        building.PlaceRoad(true, new Cells(61, 39), Direction.East);
        building.PlaceRoad(false, new Cells(60, 39), Direction.West);
        building.PlaceRoad(true, new Cells(60, 39), Direction.West);
        building.PlaceRoad(true, new Cells(60, 39), Direction.West);
        building.PlaceRoad(false, new Cells(59, 39), Direction.West);
        building.PlaceRoad(true, new Cells(59, 39), Direction.West);
        building.PlaceRoad(true, new Cells(59, 39), Direction.West);
        building.PlaceRoad(false, new Cells(58, 39), Direction.West);
        building.PlaceRoad(true, new Cells(58, 39), Direction.West);
        building.PlaceRoad(true, new Cells(58, 39), Direction.West);
        building.PlaceRoad(false, new Cells(57, 39), Direction.West);
        building.PlaceRoad(true, new Cells(57, 39), Direction.West);
        building.PlaceRoad(true, new Cells(57, 39), Direction.West);
        building.PlaceRoad(false, new Cells(56, 39), Direction.West);
        building.PlaceRoad(true, new Cells(56, 39), Direction.West);
        building.PlaceRoad(true, new Cells(56, 39), Direction.West);
        building.PlaceRoad(false, new Cells(55, 39), Direction.West);
        building.PlaceRoad(true, new Cells(55, 39), Direction.West);
        building.PlaceRoad(true, new Cells(55, 39), Direction.West);
        building.PlaceRoad(false, new Cells(54, 39), Direction.West);
        building.PlaceRoad(true, new Cells(54, 39), Direction.West);
        building.PlaceRoad(true, new Cells(54, 39), Direction.West);
        building.PlaceRoad(false, new Cells(53, 39), Direction.West);
        building.PlaceRoad(true, new Cells(53, 39), Direction.West);
        building.PlaceRoad(true, new Cells(53, 39), Direction.West);
        building.PlaceRoad(false, new Cells(52, 39), Direction.West);
        building.PlaceRoad(true, new Cells(52, 39), Direction.West);
        building.PlaceRoad(true, new Cells(52, 39), Direction.West);
        building.PlaceRoad(false, new Cells(51, 39), Direction.West);
        building.PlaceRoad(true, new Cells(51, 39), Direction.West);
        building.PlaceRoad(true, new Cells(51, 39), Direction.West);
        building.PlaceRoad(false, new Cells(50, 39), Direction.West);
        building.PlaceRoad(true, new Cells(50, 39), Direction.West);
        building.PlaceRoad(true, new Cells(50, 39), Direction.West);
        building.PlaceRoad(false, new Cells(49, 39), Direction.West);
        building.PlaceRoad(true, new Cells(49, 39), Direction.West);
        building.PlaceRoad(true, new Cells(49, 39), Direction.West);
        building.PlaceRoad(false, new Cells(48, 39), Direction.West);
        building.PlaceRoad(true, new Cells(48, 39), Direction.West);
        building.PlaceRoad(true, new Cells(48, 39), Direction.West);
        building.PlaceRoad(false, new Cells(47, 39), Direction.West);
        building.PlaceRoad(true, new Cells(47, 39), Direction.West);
        building.PlaceRoad(true, new Cells(47, 39), Direction.West);
        building.PlaceRoad(false, new Cells(46, 39), Direction.West);
        building.PlaceRoad(true, new Cells(46, 39), Direction.West);
        building.PlaceRoad(true, new Cells(46, 39), Direction.West);
        building.PlaceRoad(false, new Cells(45, 39), Direction.West);
        building.PlaceRoad(true, new Cells(45, 39), Direction.West);
        building.PlaceRoad(true, new Cells(45, 39), Direction.West);
        building.PlaceRoad(false, new Cells(44, 39), Direction.West);
        building.PlaceRoad(true, new Cells(44, 39), Direction.West);
        building.PlaceRoad(true, new Cells(44, 39), Direction.West);
        building.PlaceRoad(false, new Cells(43, 39), Direction.West);
        building.PlaceRoad(true, new Cells(41, 39), Direction.South);
        building.PlaceRoad(true, new Cells(43, 39), Direction.West);
        building.PlaceRoad(true, new Cells(41, 39), Direction.North);
        building.PlaceRoad(true, new Cells(43, 39), Direction.West);
        building.PlaceRoad(false, new Cells(42, 39), Direction.West);
        building.PlaceRoad(true, new Cells(41, 39), Direction.West);
        building.PlaceRoad(true, new Cells(41, 39), Direction.North);
        building.PlaceRoad(false, new Cells(40, 39), Direction.West);
        building.PlaceRoad(true, new Cells(40, 39), Direction.West);
        building.PlaceRoad(true, new Cells(40, 39), Direction.West);
        building.PlaceRoad(false, new Cells(39, 39), Direction.West);
        building.PlaceRoad(true, new Cells(39, 39), Direction.West);
        building.PlaceRoad(true, new Cells(39, 39), Direction.West);
        building.PlaceRoad(false, new Cells(38, 39), Direction.West);
        building.PlaceRoad(true, new Cells(38, 39), Direction.West);
        building.PlaceRoad(true, new Cells(38, 39), Direction.West);
        building.PlaceRoad(false, new Cells(37, 39), Direction.West);
        building.PlaceRoad(false, new Cells(37, 49), Direction.North);
        building.PlaceRoad(true, new Cells(37, 49), Direction.North);
        building.PlaceRoad(true, new Cells(37, 49), Direction.South);
        building.PlaceRoad(false, new Cells(37, 48), Direction.North);
        building.PlaceRoad(true, new Cells(37, 48), Direction.North);
        building.PlaceRoad(true, new Cells(37, 48), Direction.South);
        building.PlaceRoad(false, new Cells(37, 47), Direction.North);
        building.PlaceRoad(true, new Cells(37, 47), Direction.North);
        building.PlaceRoad(true, new Cells(37, 47), Direction.South);
        building.PlaceRoad(false, new Cells(37, 46), Direction.North);
        building.PlaceRoad(true, new Cells(37, 46), Direction.North);
        building.PlaceRoad(true, new Cells(37, 46), Direction.South);
        building.PlaceRoad(false, new Cells(37, 45), Direction.North);
        building.PlaceRoad(true, new Cells(37, 45), Direction.North);
        building.PlaceRoad(true, new Cells(37, 45), Direction.South);
        building.PlaceRoad(false, new Cells(37, 44), Direction.North);
        building.PlaceRoad(true, new Cells(37, 44), Direction.North);
        building.PlaceRoad(true, new Cells(37, 44), Direction.South);
        building.PlaceRoad(false, new Cells(37, 43), Direction.North);
        building.PlaceRoad(true, new Cells(37, 43), Direction.North);
        building.PlaceRoad(true, new Cells(37, 43), Direction.South);
        building.PlaceRoad(false, new Cells(37, 42), Direction.North);
        building.PlaceRoad(true, new Cells(37, 42), Direction.North);
        building.PlaceRoad(true, new Cells(37, 42), Direction.South);
        building.PlaceRoad(false, new Cells(37, 41), Direction.North);
        building.PlaceRoad(true, new Cells(37, 39), Direction.West);
        building.PlaceRoad(true, new Cells(37, 41), Direction.North);
        building.PlaceRoad(true, new Cells(37, 39), Direction.West);
        building.PlaceRoad(true, new Cells(37, 41), Direction.South);
        building.PlaceRoad(false, new Cells(37, 40), Direction.South);
        building.PlaceRoad(false, new Cells(39, 49), Direction.North);
        building.PlaceRoad(true, new Cells(39, 49), Direction.East);
        building.PlaceRoad(true, new Cells(39, 49), Direction.West);
        building.PlaceRoad(false, new Cells(40, 49), Direction.East);
        building.PlaceRoad(true, new Cells(37, 49), Direction.South);
        building.PlaceRoad(true, new Cells(39, 49), Direction.West);
        building.PlaceRoad(true, new Cells(37, 49), Direction.North);
        building.PlaceRoad(true, new Cells(39, 49), Direction.West);
        building.PlaceRoad(false, new Cells(38, 49), Direction.West);
        building.PlaceRoad(true, new Cells(40, 49), Direction.East);
        building.PlaceRoad(true, new Cells(40, 49), Direction.West);
        building.PlaceRoad(false, new Cells(41, 49), Direction.East);
        building.PlaceRoad(true, new Cells(41, 49), Direction.East);
        building.PlaceRoad(true, new Cells(41, 49), Direction.West);
        building.PlaceRoad(false, new Cells(42, 49), Direction.East);
        building.PlaceRoad(true, new Cells(42, 49), Direction.East);
        building.PlaceRoad(true, new Cells(42, 49), Direction.West);
        building.PlaceRoad(false, new Cells(43, 49), Direction.East);
        building.PlaceRoad(true, new Cells(43, 49), Direction.East);
        building.PlaceRoad(true, new Cells(43, 49), Direction.West);
        building.PlaceRoad(false, new Cells(44, 49), Direction.East);
        building.PlaceRoad(true, new Cells(44, 49), Direction.East);
        building.PlaceRoad(true, new Cells(44, 49), Direction.West);
        building.PlaceRoad(false, new Cells(45, 49), Direction.East);
        building.PlaceRoad(true, new Cells(45, 49), Direction.East);
        building.PlaceRoad(true, new Cells(45, 49), Direction.West);
        building.PlaceRoad(false, new Cells(46, 49), Direction.East);
        building.PlaceRoad(true, new Cells(46, 49), Direction.East);
        building.PlaceRoad(true, new Cells(46, 49), Direction.West);
        building.PlaceRoad(false, new Cells(47, 49), Direction.East);
        building.PlaceRoad(true, new Cells(47, 49), Direction.East);
        building.PlaceRoad(true, new Cells(47, 49), Direction.West);
        building.PlaceRoad(false, new Cells(48, 49), Direction.East);
        building.PlaceRoad(true, new Cells(48, 49), Direction.East);
        building.PlaceRoad(true, new Cells(48, 49), Direction.West);
        building.PlaceRoad(false, new Cells(49, 49), Direction.East);
        building.PlaceRoad(true, new Cells(49, 49), Direction.East);
        building.PlaceRoad(true, new Cells(49, 49), Direction.West);
        building.PlaceRoad(false, new Cells(50, 49), Direction.East);
        building.PlaceRoad(true, new Cells(50, 49), Direction.East);
        building.PlaceRoad(true, new Cells(50, 49), Direction.West);
        building.PlaceRoad(false, new Cells(51, 49), Direction.East);
        building.PlaceRoad(true, new Cells(51, 49), Direction.East);
        building.PlaceRoad(true, new Cells(51, 49), Direction.West);
        building.PlaceRoad(false, new Cells(52, 49), Direction.East);
        building.PlaceRoad(true, new Cells(52, 49), Direction.East);
        building.PlaceRoad(true, new Cells(52, 49), Direction.West);
        building.PlaceRoad(false, new Cells(53, 49), Direction.East);
        building.PlaceRoad(true, new Cells(53, 49), Direction.East);
        building.PlaceRoad(true, new Cells(53, 49), Direction.West);
        building.PlaceRoad(false, new Cells(54, 49), Direction.East);
        building.PlaceRoad(true, new Cells(54, 49), Direction.East);
        building.PlaceRoad(true, new Cells(54, 49), Direction.West);
        building.PlaceRoad(false, new Cells(55, 49), Direction.East);
        building.PlaceRoad(true, new Cells(55, 49), Direction.East);
        building.PlaceRoad(true, new Cells(55, 49), Direction.West);
        building.PlaceRoad(false, new Cells(56, 49), Direction.East);
        building.PlaceRoad(true, new Cells(56, 49), Direction.East);
        building.PlaceRoad(true, new Cells(56, 49), Direction.West);
        building.PlaceRoad(false, new Cells(57, 49), Direction.East);
        building.PlaceRoad(true, new Cells(57, 49), Direction.East);
        building.PlaceRoad(true, new Cells(57, 49), Direction.West);
        building.PlaceRoad(false, new Cells(58, 49), Direction.East);
        building.PlaceRoad(true, new Cells(58, 49), Direction.East);
        building.PlaceRoad(true, new Cells(58, 49), Direction.West);
        building.PlaceRoad(false, new Cells(59, 49), Direction.East);
        building.PlaceRoad(true, new Cells(37, 44), Direction.East);
        building.PlaceRoad(true, new Cells(37, 44), Direction.West);
        building.PlaceRoad(false, new Cells(38, 44), Direction.East);
        building.PlaceRoad(true, new Cells(38, 44), Direction.East);
        building.PlaceRoad(true, new Cells(38, 44), Direction.West);
        building.PlaceRoad(false, new Cells(39, 44), Direction.East);
        building.PlaceRoad(true, new Cells(39, 44), Direction.East);
        building.PlaceRoad(true, new Cells(39, 44), Direction.West);
        building.PlaceRoad(false, new Cells(40, 44), Direction.East);
        building.PlaceRoad(true, new Cells(40, 44), Direction.East);
        building.PlaceRoad(true, new Cells(40, 44), Direction.West);
        building.PlaceRoad(false, new Cells(41, 44), Direction.East);
        building.PlaceRoad(true, new Cells(41, 44), Direction.East);
        building.PlaceRoad(true, new Cells(41, 44), Direction.West);
        building.PlaceRoad(false, new Cells(42, 44), Direction.East);
        building.PlaceRoad(true, new Cells(42, 44), Direction.East);
        building.PlaceRoad(true, new Cells(42, 44), Direction.West);
        building.PlaceRoad(false, new Cells(43, 44), Direction.East);
        building.PlaceRoad(true, new Cells(43, 44), Direction.East);
        building.PlaceRoad(true, new Cells(43, 44), Direction.West);
        building.PlaceRoad(false, new Cells(44, 44), Direction.East);
        building.PlaceRoad(true, new Cells(44, 44), Direction.East);
        building.PlaceRoad(true, new Cells(44, 44), Direction.West);
        building.PlaceRoad(false, new Cells(45, 44), Direction.East);
        building.PlaceRoad(true, new Cells(45, 44), Direction.East);
        building.PlaceRoad(true, new Cells(45, 44), Direction.West);
        building.PlaceRoad(false, new Cells(46, 44), Direction.East);
        building.PlaceRoad(true, new Cells(46, 44), Direction.East);
        building.PlaceRoad(true, new Cells(46, 44), Direction.West);
        building.PlaceRoad(false, new Cells(47, 44), Direction.East);
        building.PlaceRoad(true, new Cells(47, 44), Direction.East);
        building.PlaceRoad(true, new Cells(47, 44), Direction.West);
        building.PlaceRoad(false, new Cells(48, 44), Direction.East);
        building.PlaceRoad(true, new Cells(48, 44), Direction.East);
        building.PlaceRoad(true, new Cells(48, 44), Direction.West);
        building.PlaceRoad(false, new Cells(49, 44), Direction.East);
        building.PlaceRoad(true, new Cells(49, 44), Direction.East);
        building.PlaceRoad(true, new Cells(49, 44), Direction.West);
        building.PlaceRoad(false, new Cells(50, 44), Direction.East);
        building.PlaceRoad(true, new Cells(50, 44), Direction.East);
        building.PlaceRoad(true, new Cells(50, 44), Direction.West);
        building.PlaceRoad(false, new Cells(51, 44), Direction.East);
        building.PlaceRoad(true, new Cells(51, 44), Direction.East);
        building.PlaceRoad(true, new Cells(51, 44), Direction.West);
        building.PlaceRoad(false, new Cells(52, 44), Direction.East);
        building.PlaceRoad(true, new Cells(52, 44), Direction.East);
        building.PlaceRoad(true, new Cells(52, 44), Direction.West);
        building.PlaceRoad(false, new Cells(53, 44), Direction.East);
        building.PlaceRoad(true, new Cells(53, 44), Direction.East);
        building.PlaceRoad(true, new Cells(53, 44), Direction.West);
        building.PlaceRoad(false, new Cells(54, 44), Direction.East);
        building.PlaceRoad(true, new Cells(54, 44), Direction.East);
        building.PlaceRoad(true, new Cells(54, 44), Direction.West);
        building.PlaceRoad(false, new Cells(55, 44), Direction.East);
        building.PlaceRoad(true, new Cells(55, 44), Direction.East);
        building.PlaceRoad(true, new Cells(55, 44), Direction.West);
        building.PlaceRoad(false, new Cells(56, 44), Direction.East);
        building.PlaceRoad(true, new Cells(56, 44), Direction.East);
        building.PlaceRoad(true, new Cells(56, 44), Direction.West);
        building.PlaceRoad(false, new Cells(57, 44), Direction.East);
        building.PlaceRoad(true, new Cells(57, 44), Direction.East);
        building.PlaceRoad(true, new Cells(57, 44), Direction.West);
        building.PlaceRoad(false, new Cells(58, 44), Direction.East);
        building.PlaceRoad(true, new Cells(58, 44), Direction.East);
        building.PlaceRoad(true, new Cells(58, 44), Direction.West);
        building.PlaceRoad(false, new Cells(59, 44), Direction.East);
        building.PlaceRoad(true, new Cells(59, 44), Direction.East);
        building.PlaceRoad(true, new Cells(59, 44), Direction.West);
        building.PlaceRoad(false, new Cells(60, 44), Direction.East);
        building.PlaceRoad(true, new Cells(61, 39), Direction.South);
        building.PlaceRoad(true, new Cells(61, 39), Direction.South);
        building.PlaceRoad(false, new Cells(61, 40), Direction.South);
        building.PlaceRoad(true, new Cells(61, 40), Direction.South);
        building.PlaceRoad(true, new Cells(61, 40), Direction.South);
        building.PlaceRoad(false, new Cells(61, 41), Direction.South);
        building.PlaceRoad(true, new Cells(61, 41), Direction.South);
        building.PlaceRoad(true, new Cells(61, 41), Direction.South);
        building.PlaceRoad(false, new Cells(61, 42), Direction.South);
        building.PlaceRoad(true, new Cells(61, 42), Direction.South);
        building.PlaceRoad(true, new Cells(61, 42), Direction.South);
        building.PlaceRoad(false, new Cells(61, 43), Direction.South);
        building.PlaceRoad(true, new Cells(60, 44), Direction.East);
        building.PlaceRoad(true, new Cells(61, 43), Direction.South);
        building.PlaceRoad(true, new Cells(60, 44), Direction.West);
        building.PlaceRoad(true, new Cells(61, 43), Direction.South);
        building.PlaceRoad(false, new Cells(61, 44), Direction.East);
        building.PlaceRoad(true, new Cells(61, 44), Direction.North);
        building.PlaceRoad(true, new Cells(61, 44), Direction.East);
        building.PlaceRoad(false, new Cells(61, 45), Direction.South);
        building.PlaceRoad(true, new Cells(61, 45), Direction.South);
        building.PlaceRoad(true, new Cells(61, 45), Direction.South);
        building.PlaceRoad(false, new Cells(61, 46), Direction.South);
        building.PlaceRoad(true, new Cells(61, 46), Direction.South);
        building.PlaceRoad(true, new Cells(61, 46), Direction.South);
        building.PlaceRoad(false, new Cells(61, 47), Direction.South);
        building.PlaceRoad(true, new Cells(59, 49), Direction.East);
        building.PlaceRoad(true, new Cells(59, 49), Direction.West);
        building.PlaceRoad(false, new Cells(60, 49), Direction.East);
        building.PlaceRoad(true, new Cells(60, 49), Direction.East);
        building.PlaceRoad(true, new Cells(60, 49), Direction.West);
        building.PlaceRoad(false, new Cells(61, 49), Direction.East);
        building.PlaceRoad(true, new Cells(61, 47), Direction.South);
        building.PlaceRoad(true, new Cells(61, 49), Direction.West);
        building.PlaceRoad(true, new Cells(61, 47), Direction.South);
        building.PlaceRoad(true, new Cells(61, 49), Direction.East);
        building.PlaceRoad(false, new Cells(61, 48), Direction.South);
    }

    void PlaceRoads(Cells start, Cells end)
    {
        if (start.x < end.x)
            for (int x = start.x; x <= end.x; x++)
                building.PlaceRoad(true, new Cells(x, start.z));
        else if (start.z < end.z)
            for (int z = start.z; z <= end.z; z++)
                building.PlaceRoad(true, new Cells(start.x, z));
        else if (start.x > end.x)
            for (int x = start.x; x >= end.x; x--)
                building.PlaceRoad(true, new Cells(x, start.z));
        else if (start.z > end.z)
            for (int z = start.z; z >= end.z; z--)
                building.PlaceRoad(true, new Cells(start.x, z));
    }

}
